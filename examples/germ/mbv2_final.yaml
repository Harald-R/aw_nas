controller_cfg:
  rollout_type: germ
  schedule_cfg: null
controller_type: random_sample
dataset_cfg:
  #train_ann_file: annotations/instances_train2017.json
  #test_ann_file: annotations/instances_val2017.json
  #train_img_prefix: train2017
  #test_img_prefix: val2017
 
  train_crop_size: [800, 480]
  test_crop_size: [800, 480]
  load_train_only: false
  random_choose: false
  remove_no_anno: true
  remove_invalid_labels: true
  has_background: false
  train_pipeline:
      #- type: LoadImageFromFile
      #- type: LoadAnnotations
      #with_bbox: True
    - type: Resize
      img_scale: !!python/tuple [800, 480]
      keep_ratio: true
    - type: RandomFlip
      flip_ratio: 0.5
    - type: Normalize
      mean: [123.675, 116.28, 103.53]
      #std: [1, 1, 1]
      std: [58.395, 57.12, 57.375]
      to_rgb: true
    - type: Pad
      size_divisor: 32
    - type: DefaultFormatBundle
      #- type: Collect
      #keys: [img, gt_bboxes, gt_labels]
  test_pipeline: 
      #- type: LoadImageFromFile
      #- type: LoadAnnotations
      #with_bbox: True
    - type: MultiScaleFlipAug
      img_scale: !!python/tuple [800, 480]
      flip: false
      transforms: 
        - type: Resize
          keep_ratio: true
        - type: RandomFlip
        - type: Normalize
          #mean: [0., 0., 0.]
          mean: [123.675, 116.28, 103.53]
          #std: [1, 1, 1]
          std: [58.395, 57.12, 57.375]
          to_rgb: true
        - type: Pad
          size_divisor: 32
        - type: DefaultFormatBundle


dataset_type: coco
objective_type: mmdetection_head
objective_cfg:
  # Schedulable attributes:
  num_classes: 80
  metrics_type: coco
  metrics_cfg:
      remove_invalid_labels: true
      has_background: false
  head_type: ATSSHead
  head_cfg:
      num_classes: 80
      in_channels: 64
      stacked_convs: 3
      feat_channels: 64
      norm_cfg:
          type: BN
          requires_grad: true
      anchor_generator:
          type: AnchorGenerator
          ratios: [1.0]
          octave_base_scale: 5
          scales_per_octave: 1
          strides: [8, 16, 32, 64, 128]
      bbox_coder:
          type: DeltaXYWHBBoxCoder
          target_means: [.0, .0, .0, .0]
          target_stds: [0.1, 0.1, 0.2, 0.2]
      loss_cls:
          type: FocalLoss
          use_sigmoid: True
          gamma: 2.0
          alpha: 0.25
          loss_weight: 1.0
      loss_bbox:
          type: GIoULoss
          loss_weight: 2.0
      loss_centerness:
          type: CrossEntropyLoss
          use_sigmoid: True
          loss_weight: 1.0
      train_cfg:
        assigner:
          type: ATSSAssigner
          topk: 9
        allowed_border: -1
        #smoothl1_beta: 1.
        pos_weight: -1
        debug: false
      test_cfg:
          nms_pre: 1000
          min_bbox_size: 0
          nms:
              type: nms
              iou_threshold: 0.6
          min_bbox_size: 0
          score_thr: 0.05
          max_per_img: 100

rollout_type: wrapper
search_space_cfg:
    backbone_search_space_type: germ
    backbone_search_space_cfg: {}
    backbone_rollout_type: germ
    neck_search_space_type: germ
    neck_search_space_cfg: {}
    neck_rollout_type: germ
search_space_type: wrapper

final_model_cfg:

  genotypes: 
      - OrderedDict([('backbone.cells.0.0.out_channels', 8), ('backbone.cells.0.0.kernel_size', 7), ('backbone.cells.0.0.inner_channels', 96), ('backbone.cells.0.0.stride', 2), ('backbone.cells.0.1.kernel_size', 7), ('backbone.cells.0.1.inner_channels', 48), ('backbone.cells.0.1.stride', 1), ('backbone.cells.0.2.kernel_size', 7), ('backbone.cells.0.2.inner_channels', 48), ('backbone.cells.0.2.stride', 1), ('backbone.cells.0.3.kernel_size', 7), ('backbone.cells.0.3.inner_channels', 48), ('backbone.cells.0.3.stride', 1), ('backbone.cells.1.0.out_channels', 16), ('backbone.cells.1.0.kernel_size', 7), ('backbone.cells.1.0.inner_channels', 48), ('backbone.cells.1.0.stride', 2), ('backbone.cells.1.1.kernel_size', 7), ('backbone.cells.1.1.inner_channels', 96), ('backbone.cells.1.1.stride', 1), ('backbone.cells.1.2.kernel_size', 7), ('backbone.cells.1.2.inner_channels', 96), ('backbone.cells.1.2.stride', 1), ('backbone.cells.1.3.kernel_size', 7), ('backbone.cells.1.3.inner_channels', 96), ('backbone.cells.1.3.stride', 1), ('backbone.cells.2.0.out_channels', 32), ('backbone.cells.2.0.kernel_size', 7), ('backbone.cells.2.0.inner_channels', 96), ('backbone.cells.2.0.stride', 2), ('backbone.cells.2.1.kernel_size', 7), ('backbone.cells.2.1.inner_channels', 192), ('backbone.cells.2.1.stride', 1), ('backbone.cells.2.2.kernel_size', 7), ('backbone.cells.2.2.inner_channels', 192), ('backbone.cells.2.2.stride', 1), ('backbone.cells.2.3.kernel_size', 7), ('backbone.cells.2.3.inner_channels', 192), ('backbone.cells.2.3.stride', 1), ('backbone.cells.3.0.out_channels', 32), ('backbone.cells.3.0.kernel_size', 7), ('backbone.cells.3.0.inner_channels', 192), ('backbone.cells.3.0.stride', 1), ('backbone.cells.3.1.kernel_size', 7), ('backbone.cells.3.1.inner_channels', 192), ('backbone.cells.3.1.stride', 1), ('backbone.cells.3.2.kernel_size', 7), ('backbone.cells.3.2.inner_channels', 192), ('backbone.cells.3.2.stride', 1), ('backbone.cells.3.3.kernel_size', 7), ('backbone.cells.3.3.inner_channels', 192), ('backbone.cells.3.3.stride', 1), ('backbone.cells.4.0.out_channels', 64), ('backbone.cells.4.0.kernel_size', 7), ('backbone.cells.4.0.inner_channels', 192), ('backbone.cells.4.0.stride', 2), ('backbone.cells.4.1.kernel_size', 7), ('backbone.cells.4.1.inner_channels', 384), ('backbone.cells.4.1.stride', 1), ('backbone.cells.4.2.kernel_size', 7), ('backbone.cells.4.2.inner_channels', 384), ('backbone.cells.4.2.stride', 1), ('backbone.cells.4.3.kernel_size', 7), ('backbone.cells.4.3.inner_channels', 384), ('backbone.cells.4.3.stride', 1), ('backbone.cells.5.0.out_channels', 112), ('backbone.cells.5.0.kernel_size', 7), ('backbone.cells.5.0.inner_channels', 384), ('backbone.cells.5.0.stride', 1), ('backbone.depth_decs.0', 4), ('backbone.depth_decs.1', 4), ('backbone.depth_decs.2', 4), ('backbone.depth_decs.3', 4), ('backbone.depth_decs.4', 4)])
      - OrderedDict([])
      #- OrderedDict([])
  backbone_type: germ
  backbone_cfg:
    germ_supernet_type: mbv2 
    germ_supernet_cfg:
        depth_choices: [2, 3, 4]
        strides: [2, 2, 2, 1, 2, 1]
        mult_ratio_choices: [0.35]
        #mult_ratio_choices: [0.35, 0.5, 0.75, 1.0]
        channels: [32, 16, 24, 40, 80, 96, 192, 320, 1280]
        kernel_sizes: [3, 5, 7]
        expansion_choices: [2, 3, 4, 6]
        stem_stride: 2
        activation: relu6
  neck_type: fpn_germ
  neck_cfg:
    out_channels: 64
    pyramid_layers: 5
    kernel_sizes: [3]
  head_type: atss
  head_cfg:
    num_classes: 80
    num_anchors: 1
    stacked_convs: 3
    has_background: false
    in_channels: 64
  feature_levels: [3, 4, 5]
  rollout_type: wrapper
final_model_type: wrapper_final_model

final_trainer_type: wrapper_final_trainer
final_trainer_cfg:
  batch_size: 28
  epochs: 24
  optimizer_scheduler:
    type: MultiStepLR
    milestones: [16, 22]
    gamma: 0.1
  schedule_cfg: null
  warmup_steps: 500
  warmup_ratio: 0.001
  eval_every: 25
  workers_per_queue: 2
  grad_clip: null
  weight_decay: 0.0001
  learning_rate: 0.1
  save_as_state_dict: true
